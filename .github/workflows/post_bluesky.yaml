name: Post to Bluesky on Blog Update

on:
  repository_dispatch:
    types: [blog_post_updated]

jobs:
  post-to-bluesky:
    runs-on: ubuntu-latest
    
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Extract blog post metadata
        id: extract-metadata
        run: |
          # „É™„Éù„Ç∏„Éà„É™„Éá„Ç£„Çπ„Éë„ÉÉ„ÉÅ„ÅÆ„Éö„Ç§„É≠„Éº„Éâ„Åã„ÇâÊÉÖÂ†±„ÇíÂèñÂæó
          title="${{ github.event.client_payload.title }}"
          description="${{ github.event.client_payload.description }}"
          url="${{ github.event.client_payload.url }}"
          author="${{ github.event.client_payload.author }}"
          tags="${{ github.event.client_payload.tags }}"
          
          echo "title=$title" >> $GITHUB_OUTPUT
          echo "description=$description" >> $GITHUB_OUTPUT  
          echo "url=$url" >> $GITHUB_OUTPUT
          echo "author=$author" >> $GITHUB_OUTPUT
          echo "tags=$tags" >> $GITHUB_OUTPUT
          
          echo "Received blog post update:"
          echo "Title: $title"
          echo "Description: $description"
          echo "URL: $url"
          echo "Author: $author"
          echo "Tags: $tags"
      
      - name: Post to Bluesky
        env:
          BLUESKY_HANDLE: ${{ secrets.BLUESKY_HANDLE }}
          BLUESKY_PASSWORD: ${{ secrets.BLUESKY_PASSWORD }}
        run: |
          title="${{ steps.extract-metadata.outputs.title }}"
          description="${{ steps.extract-metadata.outputs.description }}"
          url="${{ steps.extract-metadata.outputs.url }}"
          author="${{ steps.extract-metadata.outputs.author }}"
          tags="${{ steps.extract-metadata.outputs.tags }}"
          
          # „Çø„Ç§„Éà„É´„Åæ„Åü„ÅØURL„ÅåÁ©∫„ÅÆÂ†¥Âêà„ÅØ„Çπ„Ç≠„ÉÉ„Éó
          if [ -z "$title" ] || [ -z "$url" ]; then
            echo "‚ö†Ô∏è „Çø„Ç§„Éà„É´„Åæ„Åü„ÅØURL„ÅåÁ©∫„ÅÆ„Åü„ÇÅ„ÄÅÊäïÁ®ø„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Åæ„Åô"
            exit 0
          fi
          
          # „Çø„Ç∞„Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØ„Éè„ÉÉ„Ç∑„É•„Çø„Ç∞„Å®„Åó„Å¶ËøΩÂä†
          hashtags="#ÊäÄË°ì„Éñ„É≠„Ç∞ #„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞"
          if [ -n "$tags" ]; then
            # „Ç´„É≥„ÉûÂå∫Âàá„Çä„ÅÆ„Çø„Ç∞„Çí„Éè„ÉÉ„Ç∑„É•„Çø„Ç∞„Å´Â§âÊèõ
            additional_tags=$(echo "$tags" | sed 's/,/ #/g' | sed 's/^/#/')
            hashtags="$hashtags $additional_tags"
          fi
          
          # ËëóËÄÖÊÉÖÂ†±„Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØËøΩÂä†
          author_text=""
          if [ -n "$author" ] && [ "$author" != "tkgstrator" ]; then
            author_text="by $author"
          fi
          
          # Bluesky„ÅÆÊäïÁ®øÊñá„Çí‰ΩúÊàêÔºàÊñáÂ≠óÊï∞Âà∂Èôê„ÇíËÄÉÊÖÆÔºâ
          post_text="üìù Êñ∞„Åó„ÅÑË®ò‰∫ã„ÇíÂÖ¨Èñã„Åó„Åæ„Åó„ÅüÔºÅ

${title}"
          
          # Ë™¨Êòé„Åå„ÅÇ„Çä„ÄÅÊñáÂ≠óÊï∞„Å´‰ΩôË£ï„Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØËøΩÂä†
          if [ -n "$description" ]; then
            current_length=$(echo "$post_text" | wc -c)
            description_length=$(echo "$description" | wc -c)
            if [ $((current_length + description_length + 50)) -lt 300 ]; then
              post_text="$post_text

${description}"
            fi
          fi
          
          # ËëóËÄÖÊÉÖÂ†±„ÇíËøΩÂä†
          if [ -n "$author_text" ]; then
            post_text="$post_text

$author_text"
          fi
          
          # URL„Å®„Éè„ÉÉ„Ç∑„É•„Çø„Ç∞„ÇíËøΩÂä†
          post_text="$post_text

${url}

$hashtags"
          
          echo "ÊäïÁ®øÂÜÖÂÆπ:"
          echo "$post_text"
          echo "ÊñáÂ≠óÊï∞: $(echo "$post_text" | wc -c)"
          
          # Bluesky„Å´„É≠„Ç∞„Ç§„É≥„Åó„Å¶„Ç¢„ÇØ„Çª„Çπ„Éà„Éº„ÇØ„É≥„ÇíÂèñÂæó
          echo "Logging in to Bluesky..."
          auth_response=$(curl -s -X POST https://bsky.social/xrpc/com.atproto.server.createSession \
            -H "Content-Type: application/json" \
            -d "{\"identifier\": \"$BLUESKY_HANDLE\", \"password\": \"$BLUESKY_PASSWORD\"}")
          
          access_token=$(echo "$auth_response" | jq -r '.accessJwt')
          did=$(echo "$auth_response" | jq -r '.did')
          
          if [ "$access_token" = "null" ] || [ "$access_token" = "" ]; then
            echo "Failed to authenticate with Bluesky"
            echo "Response: $auth_response"
            exit 1
          fi
          
          echo "Successfully authenticated. DID: $did"
          
          # JSON„Ç®„Çπ„Ç±„Éº„Éó„ÅÆ„Åü„ÇÅ„ÅÆÈñ¢Êï∞
          escape_json() {
            echo "$1" | sed 's/\\/\\\\/g' | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g'
          }
          
          escaped_text=$(escape_json "$post_text")
          
          # ÊäïÁ®ø„Çí‰ΩúÊàê
          echo "Creating post..."
          post_response=$(curl -s -X POST https://bsky.social/xrpc/com.atproto.repo.createRecord \
            -H "Authorization: Bearer $access_token" \
            -H "Content-Type: application/json" \
            -d "{
              \"repo\": \"$did\",
              \"collection\": \"app.bsky.feed.post\",
              \"record\": {
                \"text\": \"$escaped_text\",
                \"createdAt\": \"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)\"
              }
            }")
          
          if echo "$post_response" | jq -e '.uri' > /dev/null; then
            echo "‚úÖ Successfully posted to Bluesky!"
            echo "Post URI: $(echo "$post_response" | jq -r '.uri')"
          else
            echo "‚ùå Failed to post to Bluesky"
            echo "Response: $post_response"
            exit 1
          fi